{"version":3,"sources":["components/Square.js","components/Board.js","components/Game.js","helpers.js","App.js","index.js"],"names":["style","background","fontSize","fontWeight","cursor","outline","padding","Square","value","onClick","boderRadius","width","height","margin","display","gridTemplate","marginTop","Board","squares","map","square","i","key","styles","Game","useState","Array","fill","history","setHistory","stepNumber","setStepNumber","xIsNext","setXisNext","winner","lines","length","a","b","c","calculateWinner","timeInHistory","slice","current","borderRadius","_step","move","destination","border","step","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uMAEMA,EAAQ,CACbC,WAAW,YAEXC,SAAS,OACTC,WAAW,MACXC,OAAO,UACPC,QAAQ,OACRC,QAAQ,QASMC,EANA,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAQC,EAAX,EAAWA,QAAX,OACd,4BAAQT,MAAOA,EAAOS,QAASA,GAC7BD,ICXGR,EAAO,CAEZU,YAAY,OACZC,MAAM,QACNC,OAAO,QACPC,OAAO,SACPC,QAAQ,OACRC,aAAc,kCACdC,UAAU,MAeIC,EAXD,SAAC,GAAD,IAAEC,EAAF,EAAEA,QAAUT,EAAZ,EAAYA,QAAZ,OAEb,yBAAKT,MAAOA,GAEVkB,EAAQC,KAAI,SAACC,EAAQC,GAAT,OACZ,kBAAC,EAAD,CAAQC,IAAKD,EAAGb,MAAOY,EAAQX,QAAS,kBAAMA,EAAQY,WCdzD,IAAME,EAAS,CACdZ,MAAM,QACNE,OAAO,aAmEOW,EAhEF,WAAM,MAGaC,mBAAS,CAACC,MAAM,GAAGC,KAAK,QAHrC,mBAGXC,EAHW,KAGDC,EAHC,OAKqBJ,mBAAS,GAL9B,mBAKVK,EALU,KAKGC,EALH,OAOcN,oBAAS,GAPvB,mBAOXO,EAPW,KAODC,EAPC,KASZC,ECnBA,SAAyBhB,GAe9B,IAZA,IAAMiB,EAAQ,CACZ,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAIAd,EAAI,EAAGA,EAAIc,EAAMC,OAAQf,IAAK,CAAC,IAAD,cACnBc,EAAMd,GADa,GAC9BgB,EAD8B,KAC3BC,EAD2B,KACxBC,EADwB,KAErC,GAAIrB,EAAQmB,IAAMnB,EAAQmB,KAAOnB,EAAQoB,IAAMpB,EAAQmB,KAAOnB,EAAQqB,GACpE,OAAOrB,EAAQmB,GAGnB,OAAO,KDFOG,CAAgBZ,EAAQE,IA0CvC,OACC,oCACC,kBAAC,EAAD,CAAOZ,QAASU,EAAQE,GAAarB,QA1ChB,SAAAY,GAEnB,IAAMoB,EAAgBb,EAAQc,MAAM,EAAGZ,EAAa,GAE9Ca,EAAUF,EAAcX,GAExBZ,EAAO,YAAOyB,GAKdT,GAAUhB,EAAQG,KAIrBH,EAAQG,GAAKW,EAAU,IAAM,IAC7BH,EAAW,GAAD,mBAAKY,GAAL,CAAmBvB,KAC7Ba,EAAcU,EAAcL,QAC5BH,GAAYD,OAyBjB,yBAAKhC,MAAOuB,GACX,uBAAGvB,MAAO,CAACC,WAAW,YAAY2C,aAAa,MAAMtC,QAAQ,SAAU4B,EAAS,wBAAgBA,EAAS,iBAAmBF,EAAU,IAAI,MAfxIJ,EAAQT,KAAI,SAAC0B,EAAOC,GACd,IAAMC,EAAcD,EAAI,qBAAiBA,GAAS,cAClD,OACI,wBAAIxB,IAAKwB,GACL,4BAAQ9C,MAAO,CAACM,QAAQ,OAAOD,QAAQ,OAAO2C,OAAO,OAAOnC,OAAQ,OAAOZ,WAAW,YAAY2C,aAAa,OAAQnC,QAAS,kBAT5IsB,EADUkB,EAU+IH,QARzJb,EAAWgB,EAAO,IAAM,GAFd,IAAAA,IAUuJF,UElD1JG,EAFH,kBAAM,kBAAC,EAAD,OCElBC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.77b9d31e.chunk.js","sourcesContent":["import React from 'react';\n\nconst style = {\n\tbackground:'lightblue',\n\t// border:'2px solid darkblue',\n\tfontSize:'30px',\n\tfontWeight:'800',\n\tcursor:'pointer',\n\toutline:'none',\n\tpadding:'10px'\n}\n\nconst Square = ({ value , onClick }) => (\n\t<button style={style} onClick={onClick}>\n\t\t{value}\n\t</button>\n);\n\nexport default Square;","import React from 'react';\nimport Square from './Square'\n\nconst style ={\n\t// border:'4px solid darkblue',\n\tboderRadius:'10px',\n\twidth:'350px',\n\theight:'350px',\n\tmargin:'0 auto',\n\tdisplay:'grid',\n\tgridTemplate: 'repeat(3, 1fr) / repeat(3, 1fr)',\n\tmarginTop:'5%'\n\n}\n\nconst Board = ({squares , onClick}) => (\n\n\t<div style={style}>\n\n\t\t{squares.map((square, i) => (\n\t\t\t<Square key={i} value={square} onClick={() => onClick(i)}/>\n\t\t))}\n\n\t</div>\n)\n\nexport default Board;","import React ,{ useState } from 'react';\nimport Board from './Board'\nimport {calculateWinner} from '../helpers'\n\n\n\nconst styles = {\n\twidth:'200px',\n\tmargin:'20px auto',\n}\n\nconst Game = () => {\n\n\t//initial state of board with null\n\tconst [history , setHistory] = useState([Array(9).fill(null)])\n\n\tconst [ stepNumber , setStepNumber ] = useState(0);\n\n\tconst [xIsNext , setXisNext ] = useState(true);\n\n\tconst winner = calculateWinner(history[stepNumber]);\n\n    const handleClick = i => {\n\n    \tconst timeInHistory = history.slice(0, stepNumber + 1);\n\n    \tconst current = timeInHistory[stepNumber];\n\n    \tconst squares = [...current];\n\n\n        //If user click an occupied square or if game is won, return\n\n        if(winner || squares[i]) return;\n\n        // Put an X or an O in the clicked square\n\n        squares[i] = xIsNext ? 'X' : 'O';\n        setHistory([...timeInHistory,squares]);\n        setStepNumber(timeInHistory.length);\n        setXisNext(!xIsNext);\n\n\n    }\n    \n   const jumpTo = step => {\n        setStepNumber(step);\n        setXisNext(step % 2 === 0)\n    };\n    \n    const renderMoves = () => (\n    \t history.map((_step, move) => {\n            const destination = move ? `Go to move#${move}` : 'Go to start';\n            return (\n                <li key={move}>\n                    <button style={{padding:'10px',outline:'none',border:'none',margin: '.2em',background:'lightblue',borderRadius:'3px'}} onClick={() => jumpTo(move)}>{destination}</button>\n                </li>\n            )\n        })    \n        \n    )\n\n\treturn (\n\t\t<>\n\t\t\t<Board squares={history[stepNumber]} onClick={handleClick}/>\n\t\t\t<div style={styles}>\n\t\t\t\t<p style={{background:'#6eefe6c9',borderRadius:'4px',padding:'10px'}}>{winner ? 'ðŸŽ‰ Winner: ' + winner : 'Next player: ' + (xIsNext ? 'X':'O')}</p>\t\t\t\n\t\t\t\t{renderMoves()}\n\t\t\t</div>\n\t\t</>\n\t);\n\t\n\n}\n\nexport default Game;","\nexport function calculateWinner(squares) {\n\n  // winning moves\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6]\n  ];\n\n  \n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n}","import React from 'react';\nimport Game from './components/Game';\n\nconst App = () => <Game />;\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}